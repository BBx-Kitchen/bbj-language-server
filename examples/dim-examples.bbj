REM numeric arrays

REM square brackets with one or multiple dimensions
DIM Y1[22]
DIM Y2[10,10,20]

REM same with Strings arrays:
DIM Y1$[22]
DIM Y2$[10,10,20]

REM now this is pre-sizing a String with length 20
DIM Z1$(20)

REM same, initialize it with dots
DIM Z2$(10,".")

REM now the combination: a String array of pre-dimensioned strings:
DIM Y3$[22](20)
DIM Y4$[10,10,20](30,".")

REM object arrays
DIM X![20]
DIM X![20,10,4]

REM Java arrays:
REM https://documentation.basis.cloud/BASISHelp/WebHelp/gridctrl/Working_with_Java_Arrays.htm

use java.awt.Color
use java.lang.reflect.Array

colorx! = Array.newInstance(Class.forName("java.awt.Color"),2) 
Array.set(colorx!,0,Color.RED)
Array.set(colorx!,1,Color.BLUE)
print "colorx![0]=",Array.get(colorx!,0)
print "colorx![1]=",Array.get(colorx!,1)

declare Color[] Color!
color! = new Color[2]
color![0] = Color.RED
color![1] = Color.BLUE
print "color![0]=",color![0]
print "color![1]=",color![1]

REM String Templates

tpl$="NAME:C(25*),FIRSTNAME:C(25*),SCORE:N(4)"
DIM rec$:tpl$
rec.name$="Wallace"
rec.firstname$="Marcellus"
rec.score=2.3
print rec.name$,": ",rec.score

REM other examples
DIM B$:"NAME:C(10+)"

DIM B$:"NAME:C(10+=0)"

X$="STRING:C(6)"
DIM A$:X$
REDIM A$
let rd_num_files = 1
dim rd_open_tables$[1:rd_num_files],rd_open_opts$[1:rd_num_files],rd_open_chans$[1:rd_num_files],rd_open_tpls$[1:rd_num_files]

dim Y$[10], XYZ$[10,10]
y$[1](2,1)="TEST"; rem substring

let NAME$ = "name"
A$(1,5); rem substring
NAME$(10); rem substring
XYZ$[3,4](1,5); rem substring

compat$ = stbl("!COMPAT","THOROUGHBRED_IF47=TRUE")

let x$ = ""
if x$(10,10) = "" then print "if47" ; rem substring
if len(cvs(x$(10,10),3)) = 0 then print "if47" ; rem substring

DIM B$(9),ERR=errorLabel
errorLabel: