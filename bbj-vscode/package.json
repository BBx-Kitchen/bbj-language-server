{
  "name": "bbj-lang",
  "version": "0.3.0",
  "publisher": "basis-intl",
  "displayName": " BBj Programming Language Support",
  "description": "BBj Language Support for Visual Studio Code",
  "license": "MIT",
  "icon": "images/icon.png",
  "type": "module",
  "engines": {
    "vscode": "^1.67.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "repository": {
    "url": "https://github.com/BBx-Kitchen/bbj-language-server/",
    "type": "git",
    "directory": "bbj-vscode"
  },
  "contributes": {
    "languages": [
      {
        "id": "bbj",
        "aliases": [
          "BBj",
          "bbj"
        ],
        "extensions": [
          ".bbj",
          ".bbl",
          ".bbjt"
        ],
        "icon": {
          "light": "./images/bbj-file-light.svg",
          "dark": "./images/bbj-file-dark.svg"
        },
        "configuration": "./bbj-language-configuration.json"
      },
      {
        "id": "bbx",
        "aliases": [
          "BBx"
        ],
        "extensions": [
          "bbx"
        ],
        "icon": {
          "light": "./images/bbj-config-light.svg",
          "dark": "./images/bbj-config-dark.svg"
        },
        "configuration": "./bbx-language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "bbj",
        "scopeName": "source.bbj",
        "path": "./syntaxes/bbj.tmLanguage.json"
      },
      {
        "language": "bbx",
        "scopeName": "source.bbx",
        "path": "./syntaxes/bbx.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "bbj",
        "path": "./snippets/bbj.json"
      }
    ],
    "commands": [
      {
        "category": "BBj",
        "command": "bbj.config",
        "title": "Show the config.bbx file"
      },
      {
        "category": "BBj",
        "command": "bbj.properties",
        "title": "Show the BBj.properties file"
      },
      {
        "category": "BBj",
        "command": "bbj.em",
        "title": "Open Enterprise Manager"
      },
      {
        "category": "BBj",
        "command": "bbj.run",
        "title": "Run As BBj Program",
        "icon": {
          "light": "./images/run-gui-light.svg",
          "dark": "./images/run-gui-dark.svg"
        },
        "key": "alt+g"
      },
      {
        "category": "BBj",
        "command": "bbj.runBUI",
        "title": "Run As BUI Program",
        "icon": {
          "light": "./images/run-bui-light.svg",
          "dark": "./images/run-bui-dark.svg"
        },
        "key": "alt+b"
      },
      {
        "category": "BBj",
        "command": "bbj.runDWC",
        "title": "Run As DWC Program",
        "icon": {
          "light": "./images/run-dwc-light.svg",
          "dark": "./images/run-dwc-dark.svg"
        },
        "key": "alt+d"
      },
      {
        "category": "BBj",
        "command": "bbj.showClasspathEntries",
        "title": "Show Available Classpath Entries"
      }
    ],
    "keybindings": [
      {
        "command": "bbj.run",
        "key": "alt+g"
      },
      {
        "command": "bbj.runBUI",
        "key": "alt+b"
      },
      {
        "command": "bbj.runDWC",
        "key": "alt+d"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == bbj",
          "command": "bbj.run",
          "group": "BBj@1"
        },
        {
          "when": "resourceLangId == bbj",
          "command": "bbj.runBUI",
          "group": "BBj@2"
        },
        {
          "when": "resourceLangId == bbj",
          "command": "bbj.runDWC",
          "group": "BBj@3"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == bbj",
          "command": "bbj.run",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == bbj",
          "command": "bbj.runBUI",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == bbj",
          "command": "bbj.runDWC",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == bbj",
          "command": "bbj.run",
          "group": "BBj@1"
        },
        {
          "when": "resourceLangId == bbj",
          "command": "bbj.runBUI",
          "group": "BBj@2"
        },
        {
          "when": "resourceLangId == bbj",
          "command": "bbj.runDWC",
          "group": "BBj32"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "BBj configuration",
      "properties": {
        "bbj.home": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Specify the path to the BBj home directory",
          "scope": "window"
        },
        "bbj.classpath": {
          "type": "string",
          "default": "bbj_default",
          "description": "BBj Classpath entry name to use for starting applications (e.g., 'bbj_default', 'addon', 'barista'). Run 'BBj: Show Available Classpath Entries' to see all available options.",
          "scope": "window"
        },
        "bbj.commandLineOptions": {
          "type": "object",
          "properties": {
            "a": {
              "type": [
                "string",
                "null"
              ],
              "description": "Associates the SysConsole settings with a particular application so that the size, font, and position of the SysConsole are saved when the session is closed and recalled when the SysConsole is invoked again with a particular application name. Can be used with the -n parameter to create a two-part name/application key.",
              "scope": "window"
            },
            "c": {
              "type": [
                "string",
                "null"
              ],
              "description": "Name of the configuration file on the remote machine to use.",
              "scope": "window"
            },
            "d": {
              "type": "boolean",
              "description": "Invokes BBj in debug mode. In this mode, when BBj drops to console, debugging takes place in the BBj WinConsole.",
              "scope": "window"
            },
            "n": {
              "type": [
                "string",
                "null"
              ],
              "description": "Associates the SysConsole settings with a particular name, so that the size, font, and position of the SysConsole are saved when the session is closed and recalled when the SysConsole is invoked again with a particular name. Can be used with the -a parameter to create a two-part name/application key.",
              "scope": "window"
            },
            "q": {
              "type": "boolean",
              "description": "Suppresses the start-up message and is useful when running PRO/5 in background.",
              "scope": "window"
            },
            "t": {
              "type": [
                "string",
                "null"
              ],
              "description": "The alias of a terminal specified in the configuration file. FID(0) will return this alias in the Thin Client program.",
              "scope": "window"
            },
            "u": {
              "type": [
                "string",
                "null"
              ],
              "description": "Specifies the user account to be used for Data Server and AppServer access.",
              "scope": "window"
            },
            "CP": {
              "type": [
                "string",
                "null"
              ],
              "description": "Specifies the session-specific classpath for the session. See Session-Specific Classpath (SSCP).",
              "default": "bbj_default",
              "scope": "window"
            },
            "FC": {
              "type": "boolean",
              "description": "Runs in Fat Client mode (non-Thin Client). This option has been obsolete since BBj 5.00.",
              "scope": "window"
            },
            "LF": {
              "type": [
                "string",
                "null"
              ],
              "description": "Specifies the look and feel the BBj session uses. Valid options are: default, cross, none, skinlf:theme (deprecated), vpro5.",
              "scope": "window"
            },
            "LO": {
              "type": "boolean",
              "description": "Loads but does not run the specified program.",
              "scope": "window"
            },
            "LP": {
              "type": "integer",
              "description": "Specifies the Port Request Server's (PRS) port. The executable connects to the PRS to get the appropriate port to use to connect to the ThinClientProxyServer. By default, the PRS uses port 2008.",
              "scope": "window"
            },
            "MDI": {
              "type": [
                "string",
                "null"
              ],
              "description": "Specifies the mdiMode that will be used if this command is being executed within an MDI environment.",
              "scope": "window"
            },
            "RH": {
              "type": [
                "string",
                "null"
              ],
              "description": "Specifies the machine name or IP address of the server on which the ThinClientServer (TCS) or SecureThinClientServer (STCS) resides.",
              "scope": "window"
            },
            "RP": {
              "type": "integer",
              "description": "Specifies the ThinClientServer's (TCS) port on the remote machine. If no remote port number is specified, the default port, 2003, is used.",
              "scope": "window"
            },
            "SC": {
              "type": "boolean",
              "description": "Specifies a secure connection between the ThinClientProxyServer (TCPS) and the SecureThinClientServer (STCS).",
              "scope": "window"
            },
            "SMN": {
              "type": "integer",
              "description": "Specifies the minimum number of seconds for session monitoring.",
              "scope": "window"
            },
            "SMX": {
              "type": "integer",
              "description": "Specifies the maximum number of seconds for session monitoring.",
              "scope": "window"
            },
            "keystore": {
              "type": [
                "string",
                "null"
              ],
              "description": "Specifies the keystore file for SSL connections.",
              "scope": "window"
            },
            "keypass": {
              "type": [
                "string",
                "null"
              ],
              "description": "Specifies the password for the keystore.",
              "scope": "window"
            },
            "message": {
              "type": [
                "string",
                "null"
              ],
              "description": "Specifies a message for BBjSessionInfo.",
              "scope": "window"
            },
            "TC": {
              "type": "boolean",
              "description": "Specifies Thin Client mode.",
              "scope": "window"
            },
            "WD": {
              "type": [
                "string",
                "null"
              ],
              "description": "Specifies the working directory.",
              "scope": "window"
            },
            "TCPSpreload": {
              "type": "boolean",
              "description": "Preloads the ThinClientProxyServer.",
              "scope": "window"
            },
            "TCPSto": {
              "type": "integer",
              "description": "Specifies the timeout in seconds for the ThinClientProxyServer.",
              "scope": "window"
            },
            "TCPShb": {
              "type": "integer",
              "description": "Specifies the heartbeat interval in seconds for the ThinClientProxyServer.",
              "scope": "window"
            }
          },
          "description": "Additional command-line options for BBj",
          "scope": "window"
        }
      },
      "bbj.web.username": {
        "type": [
          "string",
          "null"
        ],
        "default": "admin",
        "description": "EM username",
        "scope": "window"
      },
      "bbj.web.password": {
        "type": [
          "string",
          "null"
        ],
        "default": "admin123",
        "description": "EM password",
        "scope": "window"
      },
      "bbj.web.apps": {
        "type": "object",
        "default": {},
        "description": "A dict of bui apps where the key is the name of the bui app and the value is the config dict.",
        "scope": "window"
      },
      "bbj.web.AutoSaveUponRun": {
        "type": "boolean",
        "default": false,
        "description": "Auto Save upon run of bbj program",
        "scope": "window"
      },
      "bbj.formatter.indentWidth": {
        "type": "number",
        "default": 2,
        "description": "Set the indentation width",
        "scope": "window"
      },
      "bbj.formatter.removeLineContinuation": {
        "type": "boolean",
        "default": false,
        "description": "Enable/disable removing line continuations",
        "scope": "window"
      },
      "bbj.formatter.keywordsToUppercase": {
        "type": "boolean",
        "default": false,
        "description": "Enable/disable converting keywords to uppercase",
        "scope": "window"
      },
      "bbj.formatter.splitSingleLineIF": {
        "type": "boolean",
        "default": false,
        "description": "Enable/disable single line IF statements",
        "scope": "window"
      }
    }
  },
  "activationEvents": [
    "onLanguage:bbj",
    "onCommand:bbj.config",
    "onCommand:bbj.properties",
    "onCommand:bbj.em",
    "onCommand:bbj.run",
    "onCommand:bbj.runBUI",
    "onCommand:bbj.runDWC",
    "onCommand:bbj.autoComment"
  ],
  "main": "./out/extension.cjs",
  "scripts": {
    "prepare": "npm run langium:generate && npm run build",
    "vscode:prepublish": "shx cp ../LICENSE ./LICENSE  && npm run esbuild-base -- --minify && npm run lint",
    "build": "tsc -b tsconfig.json && node ./esbuild.mjs",
    "watch": "concurrently -n tsc,esbuild -c blue,yellow \"tsc -b tsconfig.json --watch\" \"node ./esbuild.mjs --watch\"",
    "lint": "eslint src test --ext ts",
    "test": "vitest run",
    "test:watch": "vitest watch",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "test-compile": "tsc -p ./",
    "langium:generate": "langium generate",
    "langium:watch": "langium generate --watch"
  },
  "dependencies": {
    "chevrotain": "^11.0.3",
    "langium": "~3.2.1",
    "properties-file": "~3.2.5",
    "properties-reader": "^2.2.0",
    "vscode-jsonrpc": "^8.2.1",
    "vscode-languageclient": "^9.0.1",
    "vscode-uri": "^3.0.2"
  },
  "devDependencies": {
    "@types/node": "^18.0.0",
    "@types/vscode": "^1.67.0",
    "@typescript-eslint/eslint-plugin": "^5.28.0",
    "@typescript-eslint/parser": "^5.28.0",
    "concurrently": "^8.2.0",
    "esbuild": "^0.18.12",
    "eslint": "^8.17.0",
    "langium-cli": "~3.2.0",
    "shx": "^0.3.4",
    "typescript": "^4.9.4",
    "vitest": "~1.4.0"
  }
}
